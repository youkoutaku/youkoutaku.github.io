"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7316],{25405:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"programming-and-tools/development/embedded-systems/raspberry-pi-ssh-setup","title":"VS Code Remote Development on Raspberry Pi via SSH","description":"Complete guide to set up VS Code for remote development on Raspberry Pi using SSH","source":"@site/docs/2-programming-and-tools/development/embedded-systems/raspberry-pi-ssh-setup.md","sourceDirName":"2-programming-and-tools/development/embedded-systems","slug":"/programming-and-tools/development/embedded-systems/raspberry-pi-ssh-setup","permalink":"/docs/programming-and-tools/development/embedded-systems/raspberry-pi-ssh-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/youkoutaku/docusaurus-youkoutaku/tree/main/docs/2-programming-and-tools/development/embedded-systems/raspberry-pi-ssh-setup.md","tags":[{"inline":true,"label":"Raspberry Pi","permalink":"/docs/tags/raspberry-pi"},{"inline":true,"label":"SSH","permalink":"/docs/tags/ssh"},{"inline":true,"label":"VS Code","permalink":"/docs/tags/vs-code"},{"inline":true,"label":"Remote Development","permalink":"/docs/tags/remote-development"},{"inline":true,"label":"Embedded Systems","permalink":"/docs/tags/embedded-systems"},{"inline":true,"label":"IoT","permalink":"/docs/tags/io-t"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"VS Code Remote Development on Raspberry Pi via SSH","description":"Complete guide to set up VS Code for remote development on Raspberry Pi using SSH","tags":["Raspberry Pi","SSH","VS Code","Remote Development","Embedded Systems","IoT"],"authors":"youkoutaku"},"sidebar":"tutorialSidebar","previous":{"title":"Embedded Systems","permalink":"/docs/category/embedded-systems"},"next":{"title":"AI and Machine Learning","permalink":"/docs/category/ai-and-machine-learning"}}');var r=s(74848),o=s(28453);const l={sidebar_position:1,title:"VS Code Remote Development on Raspberry Pi via SSH",description:"Complete guide to set up VS Code for remote development on Raspberry Pi using SSH",tags:["Raspberry Pi","SSH","VS Code","Remote Development","Embedded Systems","IoT"],authors:"youkoutaku"},t="VS Code Remote Development on Raspberry Pi via SSH",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Install VS Code and Extensions",id:"1-install-vs-code-and-extensions",level:2},{value:"1.1 Install VS Code on Local Machine",id:"11-install-vs-code-on-local-machine",level:3},{value:"1.2 Install Remote Development Extensions",id:"12-install-remote-development-extensions",level:3},{value:"1.3 Alternative: Install Remote - SSH Only",id:"13-alternative-install-remote---ssh-only",level:3},{value:"2. Configure SSH on Raspberry Pi",id:"2-configure-ssh-on-raspberry-pi",level:2},{value:"2.1 Enable SSH Service",id:"21-enable-ssh-service",level:3},{value:"2.2 Configure SSH Security (Recommended)",id:"22-configure-ssh-security-recommended",level:3},{value:"3. Network Configuration",id:"3-network-configuration",level:2},{value:"3.1 Find Raspberry Pi IP Address",id:"31-find-raspberry-pi-ip-address",level:3},{value:"3.2 Set Static IP (Recommended)",id:"32-set-static-ip-recommended",level:3},{value:"3.3 Configure Firewall (If Enabled)",id:"33-configure-firewall-if-enabled",level:3},{value:"4. SSH Key Setup",id:"4-ssh-key-setup",level:2},{value:"4.1 Generate SSH Key Pair (Local Machine)",id:"41-generate-ssh-key-pair-local-machine",level:3},{value:"4.2 Copy Public Key to Raspberry Pi",id:"42-copy-public-key-to-raspberry-pi",level:3},{value:"4.3 Test SSH Connection",id:"43-test-ssh-connection",level:3},{value:"5. Configure VS Code SSH Connection",id:"5-configure-vs-code-ssh-connection",level:2},{value:"5.1 Connect via Command Palette",id:"51-connect-via-command-palette",level:3},{value:"5.2 Create SSH Configuration File",id:"52-create-ssh-configuration-file",level:3},{value:"5.3 Connect Using SSH Config",id:"53-connect-using-ssh-config",level:3},{value:"6. VS Code Remote Development on Pi",id:"6-vs-code-remote-development-on-pi",level:2},{value:"6.1 First Connection Setup",id:"61-first-connection-setup",level:3},{value:"6.2 Working with Raspberry Pi Files",id:"62-working-with-raspberry-pi-files",level:3},{value:"6.3 Install Extensions for Pi Development",id:"63-install-extensions-for-pi-development",level:3},{value:"6.4 Raspberry Pi Specific Development",id:"64-raspberry-pi-specific-development",level:3},{value:"7. Development Workflow Examples",id:"7-development-workflow-examples",level:2},{value:"7.1 Python IoT Project Setup",id:"71-python-iot-project-setup",level:3},{value:"7.2 GPIO Programming",id:"72-gpio-programming",level:3},{value:"7.3 Web Server for IoT Control",id:"73-web-server-for-iot-control",level:3},{value:"8. Port Forwarding for Web Development",id:"8-port-forwarding-for-web-development",level:2},{value:"8.1 Forward Ports from Pi to Local Machine",id:"81-forward-ports-from-pi-to-local-machine",level:3},{value:"8.2 Automatic Port Forwarding",id:"82-automatic-port-forwarding",level:3},{value:"9. Troubleshooting",id:"9-troubleshooting",level:2},{value:"9.1 Connection Issues",id:"91-connection-issues",level:3},{value:"&quot;Connection Refused&quot; Error",id:"connection-refused-error",level:4},{value:"&quot;Permission Denied&quot; Error",id:"permission-denied-error",level:4},{value:"&quot;Host Key Verification Failed&quot;",id:"host-key-verification-failed",level:4},{value:"9.2 Performance Issues",id:"92-performance-issues",level:3},{value:"Slow Connection",id:"slow-connection",level:4},{value:"VS Code Server Issues",id:"vs-code-server-issues",level:4},{value:"9.3 Hardware-Specific Issues",id:"93-hardware-specific-issues",level:3},{value:"GPIO Permission Errors",id:"gpio-permission-errors",level:4},{value:"Camera Module Issues",id:"camera-module-issues",level:4},{value:"10. Best Practices",id:"10-best-practices",level:2},{value:"10.1 Security Best Practices",id:"101-security-best-practices",level:3},{value:"10.2 Development Best Practices",id:"102-development-best-practices",level:3},{value:"10.3 Hardware Safety",id:"103-hardware-safety",level:3},{value:"11. Advanced Features",id:"11-advanced-features",level:2},{value:"11.1 Multiple Raspberry Pi Management",id:"111-multiple-raspberry-pi-management",level:3},{value:"11.2 Cross-Compilation Setup",id:"112-cross-compilation-setup",level:3},{value:"11.3 Docker on Raspberry Pi",id:"113-docker-on-raspberry-pi",level:3},{value:"Resources",id:"resources",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"vs-code-remote-development-on-raspberry-pi-via-ssh",children:"VS Code Remote Development on Raspberry Pi via SSH"})}),"\n",(0,r.jsx)(n.p,{children:"This guide explains how to set up Visual Studio Code (VS Code) for remote development on a Raspberry Pi using SSH. This setup allows you to develop IoT and embedded projects directly on the Raspberry Pi while maintaining the comfort of your local development environment."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://preview.redd.it/i-just-set-up-visual-studio-code-for-remote-development-on-v0-ieh7oacw9bge1.png?width=640&crop=smart&auto=webp&s=93192dc0f9df66059316a00358c91303cde7c64a",alt:"VS Code Remote Development on Raspberry Pi"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Remote development on Raspberry Pi offers several advantages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Direct hardware access"}),": Work with GPIO, sensors, and peripherals directly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistent environment"}),": Use your local VS Code setup with Pi's resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Efficient development"}),": No need to transfer files manually"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time testing"}),": Test embedded applications in the target environment"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Raspberry Pi with Raspberry Pi OS installed"}),"\n",(0,r.jsx)(n.li,{children:"Local machine with VS Code"}),"\n",(0,r.jsx)(n.li,{children:"Network connection between both devices"}),"\n",(0,r.jsx)(n.li,{children:"Basic familiarity with SSH and command line"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-install-vs-code-and-extensions",children:"1. Install VS Code and Extensions"}),"\n",(0,r.jsx)(n.h3,{id:"11-install-vs-code-on-local-machine",children:"1.1 Install VS Code on Local Machine"}),"\n",(0,r.jsxs)(n.p,{children:["Download and install Visual Studio Code from the ",(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"official website"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"12-install-remote-development-extensions",children:"1.2 Install Remote Development Extensions"}),"\n",(0,r.jsxs)(n.p,{children:["Install the ",(0,r.jsx)(n.strong,{children:"Remote Development"})," extension pack:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Open VS Code"}),"\n",(0,r.jsxs)(n.li,{children:["Click on the ",(0,r.jsx)(n.strong,{children:"Extensions"})," view icon on the sidebar (Ctrl+Shift+X)"]}),"\n",(0,r.jsxs)(n.li,{children:["Search for ",(0,r.jsx)(n.strong,{children:"Remote Development"})]}),"\n",(0,r.jsx)(n.li,{children:"Install the extension pack by Microsoft"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This pack includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Remote - SSH"}),"\n",(0,r.jsx)(n.li,{children:"Remote - Containers"}),"\n",(0,r.jsx)(n.li,{children:"Remote - WSL"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"13-alternative-install-remote---ssh-only",children:"1.3 Alternative: Install Remote - SSH Only"}),"\n",(0,r.jsx)(n.p,{children:"If you only need SSH functionality:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Search for ",(0,r.jsx)(n.strong,{children:"Remote - SSH"})]}),"\n",(0,r.jsx)(n.li,{children:"Install the extension by Microsoft"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-configure-ssh-on-raspberry-pi",children:"2. Configure SSH on Raspberry Pi"}),"\n",(0,r.jsx)(n.h3,{id:"21-enable-ssh-service",children:"2.1 Enable SSH Service"}),"\n",(0,r.jsx)(n.p,{children:"SSH is typically enabled by default on newer Raspberry Pi OS installations. To verify or enable it:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 1: Using raspi-config (Recommended)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Open Raspberry Pi configuration tool\nsudo raspi-config\n\n# Navigate: Interfacing Options > SSH > Enable\n# Select "Yes" to enable SSH\n# Finish and reboot if prompted\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 2: Using systemctl"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable SSH service\nsudo systemctl enable ssh\n\n# Start SSH service  \nsudo systemctl start ssh\n\n# Check SSH status\nsudo systemctl status ssh\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 3: Enable SSH via desktop"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Go to Raspberry Pi Configuration from the Preferences menu"}),"\n",(0,r.jsx)(n.li,{children:"Navigate to the Interfaces tab"}),"\n",(0,r.jsx)(n.li,{children:"Enable SSH"}),"\n",(0,r.jsx)(n.li,{children:"Click OK and reboot if prompted"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"22-configure-ssh-security-recommended",children:"2.2 Configure SSH Security (Recommended)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Edit SSH configuration\nsudo nano /etc/ssh/sshd_config\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Recommended settings:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Change default port (optional)\n# Port 2222\n\n# Disable root login\nPermitRootLogin no\n\n# Enable public key authentication\nPubkeyAuthentication yes\n\n# Keep connections alive\nClientAliveInterval 60\nClientAliveCountMax 3\n\n# Limit login attempts\nMaxAuthTries 3\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Apply changes:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart ssh\n"})}),"\n",(0,r.jsx)(n.h2,{id:"3-network-configuration",children:"3. Network Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"31-find-raspberry-pi-ip-address",children:"3.1 Find Raspberry Pi IP Address"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 1: Using hostname command"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Get IP address\nhostname -I\n\n# Get detailed network information\nip addr show\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 2: Using ifconfig"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ifconfig\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 3: Check router's admin panel"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Access your router's web interface"}),"\n",(0,r.jsx)(n.li,{children:"Look for connected devices"}),"\n",(0,r.jsx)(n.li,{children:"Find your Raspberry Pi in the device list"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"32-set-static-ip-recommended",children:"3.2 Set Static IP (Recommended)"}),"\n",(0,r.jsx)(n.p,{children:"For consistent connections, set a static IP address:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Edit dhcpcd configuration\nsudo nano /etc/dhcpcd.conf\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add at the end of the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Static IP configuration\ninterface eth0  # or wlan0 for WiFi\nstatic ip_address=192.168.1.100/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Apply changes:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart dhcpcd\n"})}),"\n",(0,r.jsx)(n.h3,{id:"33-configure-firewall-if-enabled",children:"3.3 Configure Firewall (If Enabled)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check if ufw is active\nsudo ufw status\n\n# Allow SSH through firewall\nsudo ufw allow ssh\n\n# For custom SSH port\nsudo ufw allow 2222/tcp\n"})}),"\n",(0,r.jsx)(n.h2,{id:"4-ssh-key-setup",children:"4. SSH Key Setup"}),"\n",(0,r.jsx)(n.h3,{id:"41-generate-ssh-key-pair-local-machine",children:"4.1 Generate SSH Key Pair (Local Machine)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"On Windows:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# Open Command Prompt or PowerShell\nssh-keygen -t rsa -b 4096 -C "your_email@example.com"\n\n# Follow prompts:\n# Enter file: Press Enter for default (C:\\Users\\<username>\\.ssh\\id_rsa)\n# Enter passphrase: Optional but recommended\n# Confirm passphrase\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"On Linux/macOS:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Generate SSH key pair\nssh-keygen -t rsa -b 4096 -C "your_email@example.com"\n\n# Follow prompts:\n# Enter file: Press Enter for default (~/.ssh/id_rsa)\n# Enter passphrase: Optional but recommended  \n# Confirm passphrase\n'})}),"\n",(0,r.jsx)(n.h3,{id:"42-copy-public-key-to-raspberry-pi",children:"4.2 Copy Public Key to Raspberry Pi"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 1: Using ssh-copy-id (Linux/macOS)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Copy public key to Raspberry Pi\nssh-copy-id pi@192.168.1.100\n\n# Replace with your Pi's username and IP\nssh-copy-id <raspberry_pi_username>@<raspberry_pi_ip>\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method 2: Manual Copy (All Platforms)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Display your public key:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Windows\ntype C:\\Users\\<username>\\.ssh\\id_rsa.pub\n\n# Linux/macOS\ncat ~/.ssh/id_rsa.pub\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Copy the displayed key, then:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Connect to Raspberry Pi\nssh pi@192.168.1.100\n\n# Create .ssh directory (if it doesn't exist)\nmkdir -p ~/.ssh\n\n# Edit authorized_keys file\nnano ~/.ssh/authorized_keys\n\n# Paste your public key into this file\n# Save and exit (Ctrl+X, Y, Enter)\n\n# Set proper permissions\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Important Note",type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"authorized_keys"})," is a fixed filename. If you have multiple keys, save all of them in this file, each on a separate line."]})}),"\n",(0,r.jsx)(n.h3,{id:"43-test-ssh-connection",children:"4.3 Test SSH Connection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Test passwordless SSH connection\nssh pi@192.168.1.100\n\n# Should connect without asking for password\n# Exit the session\nexit\n"})}),"\n",(0,r.jsx)(n.h2,{id:"5-configure-vs-code-ssh-connection",children:"5. Configure VS Code SSH Connection"}),"\n",(0,r.jsx)(n.h3,{id:"51-connect-via-command-palette",children:"5.1 Connect via Command Palette"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Open VS Code"}),"\n",(0,r.jsxs)(n.li,{children:["Press ",(0,r.jsx)(n.code,{children:"Ctrl+Shift+P"})," (Cmd+Shift+P on macOS)"]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.strong,{children:"Remote-SSH: Connect to Host..."})]}),"\n",(0,r.jsxs)(n.li,{children:["Enter: ",(0,r.jsx)(n.code,{children:"pi@192.168.1.100"})," (replace with your Pi's details)"]}),"\n",(0,r.jsxs)(n.li,{children:["Select the platform: ",(0,r.jsx)(n.strong,{children:"Linux"})]}),"\n",(0,r.jsx)(n.li,{children:"VS Code will install the server components automatically"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"52-create-ssh-configuration-file",children:"5.2 Create SSH Configuration File"}),"\n",(0,r.jsx)(n.p,{children:"Create an SSH config file for easier connection management:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"File locations:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windows"}),": ",(0,r.jsx)(n.code,{children:"C:\\Users\\<username>\\.ssh\\config"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Linux/macOS"}),": ",(0,r.jsx)(n.code,{children:"~/.ssh/config"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Raspberry Pi Development\nHost raspberry_pi\n    HostName 192.168.1.100\n    User pi\n    Port 22\n    IdentityFile ~/.ssh/id_rsa\n    ServerAliveInterval 60\n    ServerAliveCountMax 3\n\n# Multiple Pi setup example\nHost pi-zero\n    HostName 192.168.1.101\n    User pi\n    Port 22\n\nHost pi-4\n    HostName 192.168.1.102\n    User pi\n    Port 22\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"For Windows, use full paths:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Host raspberry_pi\n    HostName 192.168.1.100\n    User pi\n    IdentityFile C:\\Users\\<username>\\.ssh\\id_rsa\n"})}),"\n",(0,r.jsx)(n.h3,{id:"53-connect-using-ssh-config",children:"5.3 Connect Using SSH Config"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open Command Palette (",(0,r.jsx)(n.code,{children:"Ctrl+Shift+P"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.strong,{children:"Remote-SSH: Connect to Host..."})]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.strong,{children:"raspberry_pi"})," from the list"]}),"\n",(0,r.jsx)(n.li,{children:"VS Code will connect using your saved configuration"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6-vs-code-remote-development-on-pi",children:"6. VS Code Remote Development on Pi"}),"\n",(0,r.jsx)(n.h3,{id:"61-first-connection-setup",children:"6.1 First Connection Setup"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"VS Code will automatically install the VS Code Server on your Pi"}),"\n",(0,r.jsx)(n.li,{children:"Wait for the installation to complete (may take several minutes)"}),"\n",(0,r.jsx)(n.li,{children:'You\'ll see "SSH: raspberry_pi" in the bottom-left corner when connected'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"62-working-with-raspberry-pi-files",children:"6.2 Working with Raspberry Pi Files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Open a folder on the Pi\nCtrl+K Ctrl+O\n\n# Open terminal on Raspberry Pi\nCtrl+` (backtick)\n\n# File explorer shows Pi's file system\n# All extensions run on the Raspberry Pi\n"})}),"\n",(0,r.jsx)(n.h3,{id:"63-install-extensions-for-pi-development",children:"6.3 Install Extensions for Pi Development"}),"\n",(0,r.jsx)(n.p,{children:"Install these extensions on the remote (Raspberry Pi) side:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Essential Extensions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python"})," - For Python development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C/C++"})," - For compiled languages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitLens"})," - Enhanced Git capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bracket Pair Colorizer"})," - Better code readability"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"IoT/Embedded Specific:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PlatformIO IDE"})," - For embedded development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Arduino"})," - Arduino development support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Circuit Python"})," - MicroPython support"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Installation steps:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Go to Extensions view (Ctrl+Shift+X)"}),"\n",(0,r.jsx)(n.li,{children:'Look for "SSH: raspberry_pi - Installed" section'}),"\n",(0,r.jsx)(n.li,{children:"Install extensions in the remote section"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"64-raspberry-pi-specific-development",children:"6.4 Raspberry Pi Specific Development"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GPIO and Hardware Access:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Example: LED control with RPi.GPIO\nimport RPi.GPIO as GPIO\nimport time\n\n# Setup\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(18, GPIO.OUT)\n\n# Blink LED\nfor i in range(10):\n    GPIO.output(18, GPIO.HIGH)\n    time.sleep(0.5)\n    GPIO.output(18, GPIO.LOW)\n    time.sleep(0.5)\n\n# Cleanup\nGPIO.cleanup()\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install common Pi libraries:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Python libraries for Raspberry Pi\npip install RPi.GPIO\npip install gpiozero\npip install adafruit-circuitpython-*\npip install w1thermsensor\n\n# For camera module\npip install picamera2\n"})}),"\n",(0,r.jsx)(n.h2,{id:"7-development-workflow-examples",children:"7. Development Workflow Examples"}),"\n",(0,r.jsx)(n.h3,{id:"71-python-iot-project-setup",children:"7.1 Python IoT Project Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create project directory\nmkdir ~/my_iot_project\ncd ~/my_iot_project\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate\n\n# Install dependencies\npip install RPi.GPIO requests flask\n\n# Create requirements file\npip freeze > requirements.txt\n"})}),"\n",(0,r.jsx)(n.h3,{id:"72-gpio-programming",children:"7.2 GPIO Programming"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# sensor_reader.py\nfrom gpiozero import MotionSensor, LED\nfrom signal import pause\n\n# Setup components\npir = MotionSensor(4)\nled = LED(18)\n\n# Event handlers\ndef motion_detected():\n    print("Motion detected!")\n    led.on()\n\ndef no_motion():\n    print("Motion stopped")\n    led.off()\n\n# Assign events\npir.when_motion = motion_detected\npir.when_no_motion = no_motion\n\n# Keep program running\npause()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"73-web-server-for-iot-control",children:"7.3 Web Server for IoT Control"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# app.py - Simple Flask web server\nfrom flask import Flask, render_template, request\nfrom gpiozero import LED\n\napp = Flask(__name__)\nled = LED(18)\n\n@app.route('/')\ndef index():\n    return '''\n    <h1>Raspberry Pi LED Control</h1>\n    <a href=\"/led/on\"><button>Turn ON</button></a>\n    <a href=\"/led/off\"><button>Turn OFF</button></a>\n    '''\n\n@app.route('/led/<state>')\ndef led_control(state):\n    if state == 'on':\n        led.on()\n        return \"LED is ON\"\n    elif state == 'off':\n        led.off()\n        return \"LED is OFF\"\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"8-port-forwarding-for-web-development",children:"8. Port Forwarding for Web Development"}),"\n",(0,r.jsx)(n.h3,{id:"81-forward-ports-from-pi-to-local-machine",children:"8.1 Forward Ports from Pi to Local Machine"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open Command Palette (",(0,r.jsx)(n.code,{children:"Ctrl+Shift+P"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.strong,{children:"Remote-SSH: Forward Port from Active Host"})]}),"\n",(0,r.jsx)(n.li,{children:"Enter port number (e.g., 5000 for Flask)"}),"\n",(0,r.jsxs)(n.li,{children:["Access via ",(0,r.jsx)(n.code,{children:"http://localhost:5000"})," on your local machine"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"82-automatic-port-forwarding",children:"8.2 Automatic Port Forwarding"}),"\n",(0,r.jsx)(n.p,{children:"VS Code can automatically detect and forward common development ports:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Port 3000 (React, Node.js)"}),"\n",(0,r.jsx)(n.li,{children:"Port 5000 (Flask)"}),"\n",(0,r.jsx)(n.li,{children:"Port 8000 (Django, HTTP server)"}),"\n",(0,r.jsx)(n.li,{children:"Port 8080 (Alternative HTTP)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"9-troubleshooting",children:"9. Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"91-connection-issues",children:"9.1 Connection Issues"}),"\n",(0,r.jsx)(n.h4,{id:"connection-refused-error",children:'"Connection Refused" Error'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check SSH service on Pi\nsudo systemctl status ssh\n\n# Restart SSH service\nsudo systemctl restart ssh\n\n# Check if SSH port is open\nsudo netstat -tlnp | grep :22\n"})}),"\n",(0,r.jsx)(n.h4,{id:"permission-denied-error",children:'"Permission Denied" Error'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check SSH key permissions on local machine\nls -la ~/.ssh/\n\n# Fix permissions on Pi\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n"})}),"\n",(0,r.jsx)(n.h4,{id:"host-key-verification-failed",children:'"Host Key Verification Failed"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Remove old host key\nssh-keygen -R 192.168.1.100\n\n# Connect again to accept new key\nssh pi@192.168.1.100\n"})}),"\n",(0,r.jsx)(n.h3,{id:"92-performance-issues",children:"9.2 Performance Issues"}),"\n",(0,r.jsx)(n.h4,{id:"slow-connection",children:"Slow Connection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Add to SSH config for better performance\nHost raspberry_pi\n    HostName 192.168.1.100\n    User pi\n    Compression yes\n    TCPKeepAlive yes\n    ServerAliveInterval 60\n"})}),"\n",(0,r.jsx)(n.h4,{id:"vs-code-server-issues",children:"VS Code Server Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Remove VS Code Server files on Pi\nrm -rf ~/.vscode-server\n\n# Reconnect to reinstall\n"})}),"\n",(0,r.jsx)(n.h3,{id:"93-hardware-specific-issues",children:"9.3 Hardware-Specific Issues"}),"\n",(0,r.jsx)(n.h4,{id:"gpio-permission-errors",children:"GPIO Permission Errors"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Add user to gpio group\nsudo usermod -a -G gpio $USER\n\n# For i2c and spi\nsudo usermod -a -G i2c,spi,gpio $USER\n\n# Logout and login again\n"})}),"\n",(0,r.jsx)(n.h4,{id:"camera-module-issues",children:"Camera Module Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable camera interface\nsudo raspi-config\n# Navigate: Interfacing Options > Camera > Enable\n\n# Test camera\nraspistill -o test.jpg\n"})}),"\n",(0,r.jsx)(n.h2,{id:"10-best-practices",children:"10. Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"101-security-best-practices",children:"10.1 Security Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use SSH keys instead of passwords"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Change default SSH port"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Keep Pi OS updated"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use firewall when needed"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Regular security audits"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Update Raspberry Pi OS\nsudo apt update && sudo apt upgrade -y\n\n# Check for security updates\nsudo unattended-upgrade -d\n"})}),"\n",(0,r.jsx)(n.h3,{id:"102-development-best-practices",children:"10.2 Development Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use virtual environments for Python projects"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Version control with Git"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Regular backups of important projects"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Document hardware connections"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use proper error handling in embedded code"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"103-hardware-safety",children:"10.3 Hardware Safety"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Always shutdown Pi properly"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use appropriate resistors with LEDs"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Check voltage levels before connections"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use proper ESD precautions"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Proper shutdown\nsudo shutdown -h now\n\n# Restart\nsudo reboot\n"})}),"\n",(0,r.jsx)(n.h2,{id:"11-advanced-features",children:"11. Advanced Features"}),"\n",(0,r.jsx)(n.h3,{id:"111-multiple-raspberry-pi-management",children:"11.1 Multiple Raspberry Pi Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# SSH config for multiple Pis\nHost pi-livingroom\n    HostName 192.168.1.100\n    User pi\n\nHost pi-garage  \n    HostName 192.168.1.101\n    User pi\n\nHost pi-garden\n    HostName 192.168.1.102\n    User pi\n"})}),"\n",(0,r.jsx)(n.h3,{id:"112-cross-compilation-setup",children:"11.2 Cross-Compilation Setup"}),"\n",(0,r.jsx)(n.p,{children:"For ARM development on x86 machines:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install cross-compilation tools\nsudo apt install gcc-arm-linux-gnueabihf\n\n# Configure for Pi Zero (ARMv6)\nexport CC=arm-linux-gnueabihf-gcc\nexport CXX=arm-linux-gnueabihf-g++\n"})}),"\n",(0,r.jsx)(n.h3,{id:"113-docker-on-raspberry-pi",children:"11.3 Docker on Raspberry Pi"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install Docker on Pi\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\n\n# Add user to docker group\nsudo usermod -aG docker pi\n\n# Test Docker\ndocker run hello-world\n"})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.raspberrypi.org/documentation/",children:"Raspberry Pi Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://code.visualstudio.com/docs/remote/remote-overview",children:"VS Code Remote Development"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://gpiozero.readthedocs.io/",children:"GPIO Zero Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://pinout.xyz/",children:"Raspberry Pi GPIO Pinout"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Pro Tips",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use a high-quality SD card (Class 10 or better) for better performance"}),"\n",(0,r.jsx)(n.li,{children:"Set up SSH key-based authentication for security"}),"\n",(0,r.jsx)(n.li,{children:"Use VS Code's integrated terminal for Pi-specific commands"}),"\n",(0,r.jsx)(n.li,{children:"Enable I2C/SPI/Camera through raspi-config before using them"}),"\n",(0,r.jsx)(n.li,{children:"Consider using a USB-to-Ethernet adapter for more stable connections"}),"\n"]})}),"\n",(0,r.jsx)(n.admonition,{title:"Performance Note",type:"note",children:(0,r.jsx)(n.p,{children:"Raspberry Pi 4 with 4GB+ RAM provides the best experience for VS Code remote development. Older models may be slower but still functional."})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(96540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);