"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[72688],{3776:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"programming-and-tools/languages/python/crash-course/dictionaries","title":"Dictionaries","description":"Storing and managing key-value pairs of information","source":"@site/docs/2-programming-and-tools/languages/python/crash-course/06-dictionaries.md","sourceDirName":"2-programming-and-tools/languages/python/crash-course","slug":"/programming-and-tools/languages/python/crash-course/dictionaries","permalink":"/zh-Hans/docs/programming-and-tools/languages/python/crash-course/dictionaries","draft":false,"unlisted":false,"editUrl":"https://github.com/youkoutaku/docusaurus-youkoutaku/tree/main/docs/2-programming-and-tools/languages/python/crash-course/06-dictionaries.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Dictionaries","description":"Storing and managing key-value pairs of information","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"If Statements","permalink":"/zh-Hans/docs/programming-and-tools/languages/python/crash-course/if-statements"},"next":{"title":"User Input and while Loops","permalink":"/zh-Hans/docs/programming-and-tools/languages/python/crash-course/user-input-while-loops"}}');var o=i(74848),r=i(28453);const s={title:"Dictionaries",description:"Storing and managing key-value pairs of information",sidebar_position:6},t="Dictionaries",l={},c=[{value:"A Simple Dictionary",id:"a-simple-dictionary",level:2},{value:"Working with Dictionaries",id:"working-with-dictionaries",level:2},{value:"Accessing Values in a Dictionary",id:"accessing-values-in-a-dictionary",level:3},{value:"Adding New Key-Value Pairs",id:"adding-new-key-value-pairs",level:3},{value:"Starting with an Empty Dictionary",id:"starting-with-an-empty-dictionary",level:3},{value:"Modifying Values in a Dictionary",id:"modifying-values-in-a-dictionary",level:3},{value:"Removing Key-Value Pairs",id:"removing-key-value-pairs",level:3},{value:"A Dictionary of Similar Objects",id:"a-dictionary-of-similar-objects",level:3},{value:"Using get() to Access Values",id:"using-get-to-access-values",level:3},{value:"Looping Through a Dictionary",id:"looping-through-a-dictionary",level:2},{value:"Looping Through All Key-Value Pairs",id:"looping-through-all-key-value-pairs",level:3},{value:"Looping Through All the Keys in a Dictionary",id:"looping-through-all-the-keys-in-a-dictionary",level:3},{value:"Using Keys to Check Specific People",id:"using-keys-to-check-specific-people",level:4},{value:"Checking Whether a Key Exists",id:"checking-whether-a-key-exists",level:4},{value:"Looping Through a Dictionary&#39;s Values",id:"looping-through-a-dictionarys-values",level:3},{value:"Avoiding Repetition with set()",id:"avoiding-repetition-with-set",level:4},{value:"Nesting",id:"nesting",level:2},{value:"A List of Dictionaries",id:"a-list-of-dictionaries",level:3},{value:"Creating a Fleet of Aliens",id:"creating-a-fleet-of-aliens",level:4},{value:"A List in a Dictionary",id:"a-list-in-a-dictionary",level:3},{value:"A Dictionary in a Dictionary",id:"a-dictionary-in-a-dictionary",level:3},{value:"Summary",id:"summary",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"dictionaries",children:"Dictionaries"})}),"\n",(0,o.jsxs)(e.p,{children:["Understanding dictionaries allows you to model real-world objects more accurately. A dictionary in Python is a collection of ",(0,o.jsx)(e.strong,{children:"key-value pairs"}),". Each key is connected to a value, and you can use a key to access the value associated with that key."]}),"\n",(0,o.jsx)(e.h2,{id:"a-simple-dictionary",children:"A Simple Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# Basic dictionary\nalien = {'color': 'green', 'points': 5}\n"})}),"\n",(0,o.jsx)(e.p,{children:"This dictionary stores two pieces of information about the alien: its color and point value."}),"\n",(0,o.jsx)(e.h2,{id:"working-with-dictionaries",children:"Working with Dictionaries"}),"\n",(0,o.jsx)(e.h3,{id:"accessing-values-in-a-dictionary",children:"Accessing Values in a Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien = {'color': 'green', 'points': 5}\n\nprint(alien['color'])\nprint(alien['points'])\n\nnew_points = alien['points']\nprint(f\"New points: {new_points}\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"green\n5\nNew points: 5\n"})}),"\n",(0,o.jsx)(e.h3,{id:"adding-new-key-value-pairs",children:"Adding New Key-Value Pairs"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien = {'color': 'green', 'points': 5}\n\nalien['x_position'] = 0\nalien['y_position'] = 25\nprint(alien)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"{'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 25}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"starting-with-an-empty-dictionary",children:"Starting with an Empty Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien = {}\nprint(alien)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"{}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"modifying-values-in-a-dictionary",children:"Modifying Values in a Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien = {'color': 'green', 'points': 5}\n\nalien['color'] = 'yellow'\nprint(alien)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"{'color': 'yellow', 'points': 5}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"removing-key-value-pairs",children:"Removing Key-Value Pairs"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien = {'color': 'green', 'points': 5}\nprint(alien)\n\ndel alien['points']\nprint(alien)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"{'color': 'green', 'points': 5}\n{'color': 'green'}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"a-dictionary-of-similar-objects",children:"A Dictionary of Similar Objects"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"favorite_languages = {\n    'jen': 'python',\n    'sarah': 'c',\n    'edward': 'ruby',\n    'phil': 'python',\n}\n\nlanguage = favorite_languages['sarah'].title()\nprint(f\"Sarah's favorite language is {language}.\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Sarah's favorite language is C.\n"})}),"\n",(0,o.jsx)(e.h3,{id:"using-get-to-access-values",children:"Using get() to Access Values"}),"\n",(0,o.jsxs)(e.p,{children:["If you're not sure whether a key exists in a dictionary, you can use the ",(0,o.jsx)(e.code,{children:"get()"})," method to avoid a KeyError:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# This will cause a KeyError\nalien_0 = {'color': 'green', 'speed': 'slow'}\nprint(alien_0['points'])  # KeyError: 'points'\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# Using get() to avoid errors\nalien_0 = {'color': 'green', 'speed': 'slow'}\n\npoint_value = alien_0.get('points', 'No point value assigned.')\nprint(point_value)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"No point value assigned.\n"})}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"get()"})," method syntax: ",(0,o.jsx)(e.code,{children:"dictionary.get(key, default_value)"})]}),"\n",(0,o.jsx)(e.h2,{id:"looping-through-a-dictionary",children:"Looping Through a Dictionary"}),"\n",(0,o.jsx)(e.p,{children:"You can loop through all of a dictionary's key-value pairs, through its keys, or through its values."}),"\n",(0,o.jsx)(e.h3,{id:"looping-through-all-key-value-pairs",children:"Looping Through All Key-Value Pairs"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"user_0 = {\n    'username': 'efermi',\n    'first': 'enrico',\n    'last': 'fermi',\n}\n\nfor key, value in user_0.items():\n    print(f\"\\nKey: {key}\")\n    print(f\"Value: {value}\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Key: username\nValue: efermi\n\nKey: first\nValue: enrico\n\nKey: last\nValue: fermi\n"})}),"\n",(0,o.jsx)(e.h3,{id:"looping-through-all-the-keys-in-a-dictionary",children:"Looping Through All the Keys in a Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"favorite_languages = {\n    'jen': 'python',\n    'sarah': 'c',\n    'edward': 'ruby',\n    'phil': 'python',\n}\n\nfor name in favorite_languages.keys():\n    print(name.title())\n"})}),"\n",(0,o.jsx)(e.p,{children:"Note: Looping through the keys is actually the default behavior when looping through a dictionary, so this code would have the same output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"for name in favorite_languages:\n    print(name.title())\n"})}),"\n",(0,o.jsx)(e.h4,{id:"using-keys-to-check-specific-people",children:"Using Keys to Check Specific People"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"friends = ['phil', 'sarah']\nfor name in favorite_languages.keys():\n    print(f\"Hi {name.title()}.\")\n    \n    if name in friends:\n        language = favorite_languages[name].title()\n        print(f\"\\t{name.title()}, I see you love {language}!\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Hi Jen.\nHi Sarah.\n\tSarah, I see you love C!\nHi Edward.\nHi Phil.\n\tPhil, I see you love Python!\n"})}),"\n",(0,o.jsx)(e.h4,{id:"checking-whether-a-key-exists",children:"Checking Whether a Key Exists"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"if 'erin' not in favorite_languages.keys():\n    print(\"Erin, please take our poll!\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Erin, please take our poll!\n"})}),"\n",(0,o.jsx)(e.h3,{id:"looping-through-a-dictionarys-values",children:"Looping Through a Dictionary's Values"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"favorite_languages = {\n    'jen': 'python',\n    'sarah': 'c',\n    'edward': 'ruby',\n    'phil': 'python',\n}\n\nprint(\"The following languages have been mentioned:\")\nfor language in favorite_languages.values():\n    print(language.title())\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"The following languages have been mentioned:\nPython\nC\nRuby\nPython\n"})}),"\n",(0,o.jsx)(e.h4,{id:"avoiding-repetition-with-set",children:"Avoiding Repetition with set()"}),"\n",(0,o.jsx)(e.p,{children:"If you want to see each unique value, you can use a set:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'print("The following languages have been mentioned:")\nfor language in set(favorite_languages.values()):\n    print(language.title())\n'})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"The following languages have been mentioned:\nRuby\nC\nPython\n"})}),"\n",(0,o.jsx)(e.p,{children:"You can also build a set directly:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"languages = {'python', 'ruby', 'c', 'python'}\nprint(languages)  # {'c', 'python', 'ruby'}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"nesting",children:"Nesting"}),"\n",(0,o.jsxs)(e.p,{children:["Sometimes you'll want to store multiple dictionaries in a list, or a list of items as a value in a dictionary. This is called ",(0,o.jsx)(e.strong,{children:"nesting"}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"a-list-of-dictionaries",children:"A List of Dictionaries"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"alien_0 = {'color': 'green', 'points': 5}\nalien_1 = {'color': 'yellow', 'points': 10}\nalien_2 = {'color': 'red', 'points': 15}\n\naliens = [alien_0, alien_1, alien_2]\n\nfor alien in aliens:\n    print(alien)\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"{'color': 'green', 'points': 5}\n{'color': 'yellow', 'points': 10}\n{'color': 'red', 'points': 15}\n"})}),"\n",(0,o.jsx)(e.h4,{id:"creating-a-fleet-of-aliens",children:"Creating a Fleet of Aliens"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# Make an empty list for storing aliens\naliens = []\n\n# Make 30 green aliens\nfor alien_number in range(30):\n    new_alien = {'color': 'green', 'points': 5, 'speed': 'slow'}\n    aliens.append(new_alien)\n\n# Show the first 5 aliens\nfor alien in aliens[:5]:\n    print(alien)\nprint(\"...\")\n\n# Show how many aliens have been created\nprint(f\"Total number of aliens: {len(aliens)}\")\n"})}),"\n",(0,o.jsx)(e.h3,{id:"a-list-in-a-dictionary",children:"A List in a Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"# Store information about a pizza being ordered\npizza = {\n    'crust': 'thick',\n    'toppings': ['mushrooms', 'extra cheese'],\n}\n\n# Summarize the order\nprint(f\"You ordered a {pizza['crust']}-crust pizza \"\n      \"with the following toppings:\")\n\nfor topping in pizza['toppings']:\n    print(f\"\\t{topping}\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"You ordered a thick-crust pizza with the following toppings:\n\tmushrooms\n\textra cheese\n"})}),"\n",(0,o.jsx)(e.h3,{id:"a-dictionary-in-a-dictionary",children:"A Dictionary in a Dictionary"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"users = {\n    'aeinstein': {\n        'first': 'albert',\n        'last': 'einstein',\n        'location': 'princeton',\n    },\n    'mcurie': {\n        'first': 'marie',\n        'last': 'curie',\n        'location': 'paris',\n    },\n}\n\nfor username, user_info in users.items():\n    print(f\"\\nUsername: {username}\")\n    full_name = f\"{user_info['first']} {user_info['last']}\"\n    location = user_info['location']\n    \n    print(f\"\\tFull name: {full_name.title()}\")\n    print(f\"\\tLocation: {location.title()}\")\n"})}),"\n",(0,o.jsx)(e.p,{children:"Output:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Username: aeinstein\n\tFull name: Albert Einstein\n\tLocation: Princeton\n\nUsername: mcurie\n\tFull name: Marie Curie\n\tLocation: Paris\n"})}),"\n",(0,o.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(e.p,{children:"In this chapter you learned how to:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Define a dictionary and work with the information stored in it"}),"\n",(0,o.jsx)(e.li,{children:"Access and modify elements in a dictionary, including adding new key-value pairs and removing them"}),"\n",(0,o.jsxs)(e.li,{children:["Use ",(0,o.jsx)(e.code,{children:"get()"})," to access values safely"]}),"\n",(0,o.jsx)(e.li,{children:"Loop through all key-value pairs, all keys, or all values"}),"\n",(0,o.jsx)(e.li,{children:"Work with lists inside dictionaries, dictionaries inside lists, and dictionaries inside dictionaries"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Dictionaries let you connect pieces of related information, enabling you to model real-world objects and situations accurately. As your programs become more complex, you'll find yourself using lists and dictionaries together to structure complex data in your programs."})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>t});var a=i(96540);const o={},r=a.createContext(o);function s(n){const e=a.useContext(r);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);