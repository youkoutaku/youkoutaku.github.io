"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1941],{28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var l=a(96540);const s={},i=l.createContext(s);function t(e){const n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(i.Provider,{value:n},e.children)}},77595:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"programming-and-tools/development/linux/ubuntu-setup","title":"Ubuntu Setup Guide","description":"Complete guide for setting up Ubuntu development environment with essential tools","source":"@site/docs/2-programming-and-tools/development/linux/ubuntu-setup.md","sourceDirName":"2-programming-and-tools/development/linux","slug":"/programming-and-tools/development/linux/ubuntu-setup","permalink":"/ja/docs/programming-and-tools/development/linux/ubuntu-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/youkoutaku/docusaurus-youkoutaku/tree/main/docs/2-programming-and-tools/development/linux/ubuntu-setup.md","tags":[{"inline":true,"label":"Ubuntu","permalink":"/ja/docs/tags/ubuntu"},{"inline":true,"label":"Linux","permalink":"/ja/docs/tags/linux"},{"inline":true,"label":"Development Setup","permalink":"/ja/docs/tags/development-setup"},{"inline":true,"label":"PyCharm","permalink":"/ja/docs/tags/py-charm"},{"inline":true,"label":"ROS","permalink":"/ja/docs/tags/ros"},{"inline":true,"label":"CUDA","permalink":"/ja/docs/tags/cuda"},{"inline":true,"label":"PyTorch","permalink":"/ja/docs/tags/py-torch"},{"inline":true,"label":"Deep Learning","permalink":"/ja/docs/tags/deep-learning"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Ubuntu Setup Guide","description":"Complete guide for setting up Ubuntu development environment with essential tools","tags":["Ubuntu","Linux","Development Setup","PyCharm","ROS","CUDA","PyTorch","Deep Learning"],"authors":"youkoutaku"},"sidebar":"tutorialSidebar","previous":{"title":"Linux System Administration","permalink":"/ja/docs/category/linux-system-administration"},"next":{"title":"Running Linux GUI Apps Remotely on Windows with SSH and X Server","permalink":"/ja/docs/programming-and-tools/development/linux/x-server-setup"}}');var s=a(74848),i=a(28453);const t={sidebar_position:1,title:"Ubuntu Setup Guide",description:"Complete guide for setting up Ubuntu development environment with essential tools",tags:["Ubuntu","Linux","Development Setup","PyCharm","ROS","CUDA","PyTorch","Deep Learning"],authors:"youkoutaku"},o="Ubuntu Setup Guide",r={},d=[{value:"0. Pre-installation: Remove Existing Ubuntu (If Needed)",id:"0-pre-installation-remove-existing-ubuntu-if-needed",level:2},{value:"0.1 Remove Ubuntu from Dual Boot System",id:"01-remove-ubuntu-from-dual-boot-system",level:3},{value:"Open Diskpart (Windows)",id:"open-diskpart-windows",level:4},{value:"Commands in Diskpart",id:"commands-in-diskpart",level:4},{value:"Delete Ubuntu System Files",id:"delete-ubuntu-system-files",level:4},{value:"Remove Assigned Drive Letter",id:"remove-assigned-drive-letter",level:4},{value:"Delete Ubuntu Partition Using Disk Management",id:"delete-ubuntu-partition-using-disk-management",level:4},{value:"1. Install Ubuntu",id:"1-install-ubuntu",level:2},{value:"1.1 Download Ubuntu",id:"11-download-ubuntu",level:3},{value:"1.2 Create Installation Media",id:"12-create-installation-media",level:3},{value:"1.3 Installation Tips",id:"13-installation-tips",level:3},{value:"2. Initial System Setup",id:"2-initial-system-setup",level:2},{value:"2.1 Update System Packages",id:"21-update-system-packages",level:3},{value:"2.2 Install Additional Codecs and Media Support",id:"22-install-additional-codecs-and-media-support",level:3},{value:"3. Install Anaconda3",id:"3-install-anaconda3",level:2},{value:"3.1 Download and Install",id:"31-download-and-install",level:3},{value:"3.2 Configure Environment",id:"32-configure-environment",level:3},{value:"3.3 Essential Conda Commands",id:"33-essential-conda-commands",level:3},{value:"3.4 Set Up Conda Channels",id:"34-set-up-conda-channels",level:3},{value:"4. Install PyCharm",id:"4-install-pycharm",level:2},{value:"4.1 Download PyCharm",id:"41-download-pycharm",level:3},{value:"4.2 Alternative: Install via Snap",id:"42-alternative-install-via-snap",level:3},{value:"4.3 Configure PyCharm with Conda",id:"43-configure-pycharm-with-conda",level:3},{value:"5. Install ROS (Robot Operating System)",id:"5-install-ros-robot-operating-system",level:2},{value:"ROS2 Humble (Ubuntu 22.04)",id:"ros2-humble-ubuntu-2204",level:3},{value:"ROS1 Noetic (Ubuntu 20.04)",id:"ros1-noetic-ubuntu-2004",level:3},{value:"6. Install NVIDIA Driver",id:"6-install-nvidia-driver",level:2},{value:"6.1 Check Available Drivers",id:"61-check-available-drivers",level:3},{value:"6.2 Install Recommended Driver",id:"62-install-recommended-driver",level:3},{value:"6.3 Handle MOK (Machine Owner Key)",id:"63-handle-mok-machine-owner-key",level:3},{value:"6.4 Verify Installation",id:"64-verify-installation",level:3},{value:"7. Install CUDA Toolkit",id:"7-install-cuda-toolkit",level:2},{value:"7.1 Download and Install CUDA",id:"71-download-and-install-cuda",level:3},{value:"7.2 Configure Environment Variables",id:"72-configure-environment-variables",level:3},{value:"7.3 Verify CUDA Installation",id:"73-verify-cuda-installation",level:3},{value:"8. Install cuDNN",id:"8-install-cudnn",level:2},{value:"8.1 Download cuDNN",id:"81-download-cudnn",level:3},{value:"8.2 Install cuDNN",id:"82-install-cudnn",level:3},{value:"8.3 Verify cuDNN Installation",id:"83-verify-cudnn-installation",level:3},{value:"9. Install PyTorch",id:"9-install-pytorch",level:2},{value:"9.1 Install PyTorch with CUDA Support",id:"91-install-pytorch-with-cuda-support",level:3},{value:"9.2 Verify PyTorch Installation",id:"92-verify-pytorch-installation",level:3},{value:"10. Install Docker",id:"10-install-docker",level:2},{value:"10.1 Install Docker Engine",id:"101-install-docker-engine",level:3},{value:"10.2 Configure Docker for Non-root User",id:"102-configure-docker-for-non-root-user",level:3},{value:"11. Additional Development Tools",id:"11-additional-development-tools",level:2},{value:"11.1 Install VS Code",id:"111-install-vs-code",level:3},{value:"11.2 Install Node.js and npm",id:"112-install-nodejs-and-npm",level:3},{value:"11.3 Install Additional Programming Languages",id:"113-install-additional-programming-languages",level:3},{value:"Java Development Kit",id:"java-development-kit",level:4},{value:"Go Programming Language",id:"go-programming-language",level:4},{value:"12. System Optimization",id:"12-system-optimization",level:2},{value:"12.1 Install System Monitoring Tools",id:"121-install-system-monitoring-tools",level:3},{value:"12.2 Enable Firewall",id:"122-enable-firewall",level:3},{value:"12.3 Set Up Automatic Updates",id:"123-set-up-automatic-updates",level:3},{value:"13. Backup and Recovery",id:"13-backup-and-recovery",level:2},{value:"13.1 Create System Backup",id:"131-create-system-backup",level:3},{value:"13.2 Backup Configuration Files",id:"132-backup-configuration-files",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:3},{value:"NVIDIA Driver Issues",id:"nvidia-driver-issues",level:4},{value:"CUDA Path Issues",id:"cuda-path-issues",level:4},{value:"Python Environment Conflicts",id:"python-environment-conflicts",level:4},{value:"Resources",id:"resources",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ubuntu-setup-guide",children:"Ubuntu Setup Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This comprehensive guide covers setting up a complete Ubuntu development environment, including package managers, development tools, GPU support, and machine learning frameworks."}),"\n",(0,s.jsx)(n.h2,{id:"0-pre-installation-remove-existing-ubuntu-if-needed",children:"0. Pre-installation: Remove Existing Ubuntu (If Needed)"}),"\n",(0,s.jsx)(n.h3,{id:"01-remove-ubuntu-from-dual-boot-system",children:"0.1 Remove Ubuntu from Dual Boot System"}),"\n",(0,s.jsx)(n.p,{children:"If you need to remove an existing Ubuntu installation from a dual boot system:"}),"\n",(0,s.jsx)(n.h4,{id:"open-diskpart-windows",children:"Open Diskpart (Windows)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Press ",(0,s.jsx)(n.code,{children:"Win + R"})," and type ",(0,s.jsx)(n.code,{children:"diskpart"})]}),"\n",(0,s.jsx)(n.li,{children:"Press Enter to open Diskpart with administrator privileges"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"commands-in-diskpart",children:"Commands in Diskpart"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check available disks:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"list disk\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Select the disk where Ubuntu is installed:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"select disk <disk_number>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check partitions on the selected disk:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"list partition\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Select the partition containing Ubuntu system files:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"select partition 1\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Assign a drive letter for access:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"assign letter=P\n"})}),"\n",(0,s.jsx)(n.h4,{id:"delete-ubuntu-system-files",children:"Delete Ubuntu System Files"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run Notepad as Administrator"}),"\n",(0,s.jsxs)(n.li,{children:["Navigate to ",(0,s.jsx)(n.code,{children:"P:"})," in File Explorer"]}),"\n",(0,s.jsx)(n.li,{children:"Delete the Ubuntu folder in the EFI directory"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove-assigned-drive-letter",children:"Remove Assigned Drive Letter"}),"\n",(0,s.jsx)(n.p,{children:"Return to Diskpart and remove the temporary drive letter:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"remove letter=P\n"})}),"\n",(0,s.jsx)(n.h4,{id:"delete-ubuntu-partition-using-disk-management",children:"Delete Ubuntu Partition Using Disk Management"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open Disk Management (",(0,s.jsx)(n.code,{children:"Win + X"})," \u2192 ",(0,s.jsx)(n.code,{children:"Disk Management"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Locate the partition containing Ubuntu"}),"\n",(0,s.jsx)(n.li,{children:'Right-click and select "Delete Volume"'}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optional:"})," Extend another partition into the unallocated space"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,s.jsx)(n.p,{children:"Always backup important data before modifying disk partitions. Incorrect operations can result in data loss."})}),"\n",(0,s.jsx)(n.h2,{id:"1-install-ubuntu",children:"1. Install Ubuntu"}),"\n",(0,s.jsx)(n.h3,{id:"11-download-ubuntu",children:"1.1 Download Ubuntu"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Download ",(0,s.jsx)(n.a,{href:"https://ubuntu.com/download/desktop",children:"Ubuntu Desktop"})]}),"\n",(0,s.jsx)(n.li,{children:"Choose the latest LTS version for stability"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"12-create-installation-media",children:"1.2 Create Installation Media"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.a,{href:"https://github.com/pbatard/rufus",children:"Rufus"})," to create a bootable USB drive:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Download and run Rufus"}),"\n",(0,s.jsx)(n.li,{children:"Select your USB drive"}),"\n",(0,s.jsx)(n.li,{children:"Select the Ubuntu ISO file"}),"\n",(0,s.jsx)(n.li,{children:'Use default settings and click "START"'}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"13-installation-tips",children:"1.3 Installation Tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Choose "Install Ubuntu alongside Windows" for dual boot'}),"\n",(0,s.jsx)(n.li,{children:"Allocate at least 50GB for Ubuntu partition"}),"\n",(0,s.jsx)(n.li,{children:"Create a separate home partition if desired"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"2-initial-system-setup",children:"2. Initial System Setup"}),"\n",(0,s.jsx)(n.h3,{id:"21-update-system-packages",children:"2.1 Update System Packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Update package lists\nsudo apt update\n\n# Upgrade all packages\nsudo apt upgrade -y\n\n# Install essential packages\nsudo apt install -y curl wget git vim build-essential software-properties-common apt-transport-https ca-certificates gnupg lsb-release\n"})}),"\n",(0,s.jsx)(n.h3,{id:"22-install-additional-codecs-and-media-support",children:"2.2 Install Additional Codecs and Media Support"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install multimedia codecs\nsudo apt install -y ubuntu-restricted-extras\n\n# Install additional media codecs\nsudo apt install -y ffmpeg\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-install-anaconda3",children:"3. Install Anaconda3"}),"\n",(0,s.jsx)(n.h3,{id:"31-download-and-install",children:"3.1 Download and Install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Navigate to Downloads directory\ncd ~/Downloads\n\n# Download Anaconda (replace with latest version)\nwget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh\n\n# Make the installer executable\nchmod +x Anaconda3-*.sh\n\n# Run the installer\nbash Anaconda3-*.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Follow the installation prompts:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Press Enter to review the license"}),"\n",(0,s.jsx)(n.li,{children:'Type "yes" to accept the license terms'}),"\n",(0,s.jsx)(n.li,{children:"Press Enter to confirm the installation location"}),"\n",(0,s.jsx)(n.li,{children:'Type "yes" when asked to initialize Anaconda3'}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"32-configure-environment",children:"3.2 Configure Environment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Edit bashrc to add Anaconda to PATH\nnano ~/.bashrc\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add the following line (replace ",(0,s.jsx)(n.code,{children:"username"})," with your actual username):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export PATH="/home/username/anaconda3/bin:$PATH"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Reload the bashrc:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.h3,{id:"33-essential-conda-commands",children:"3.3 Essential Conda Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create a new environment\nconda create -n your_env_name python=3.9\n\n# Activate environment\nconda activate your_env_name\n\n# Deactivate environment\nconda deactivate\n\n# Remove environment\nconda remove -n your_env_name --all\n\n# List all environments\nconda env list\n# or\nconda info --envs\n\n# List installed packages\nconda list\n\n# Install packages\nconda install package_name\nconda install scrapy==1.3\nconda install -n env_name package_name\n\n# Update conda\nconda update conda\n\n# Update all packages\nconda update --all\n\n# Update Anaconda\nconda update anaconda\n\n# Update Python\nconda update python\n"})}),"\n",(0,s.jsx)(n.h3,{id:"34-set-up-conda-channels",children:"3.4 Set Up Conda Channels"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Add conda-forge channel (recommended)\nconda config --add channels conda-forge\n\n# Set conda-forge as priority\nconda config --set channel_priority strict\n"})}),"\n",(0,s.jsx)(n.h2,{id:"4-install-pycharm",children:"4. Install PyCharm"}),"\n",(0,s.jsx)(n.h3,{id:"41-download-pycharm",children:"4.1 Download PyCharm"}),"\n",(0,s.jsxs)(n.p,{children:["Download ",(0,s.jsx)(n.a,{href:"https://www.jetbrains.com/pycharm/download/",children:"PyCharm"})," (Community or Professional):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Navigate to Downloads\ncd ~/Downloads\n\n# Extract PyCharm\ntar -xzf pycharm-*.tar.gz\n\n# Move to /opt directory\nsudo mv pycharm-* /opt/pycharm\n\n# Create desktop shortcut\nsudo ln -s /opt/pycharm/bin/pycharm.sh /usr/local/bin/pycharm\n"})}),"\n",(0,s.jsx)(n.h3,{id:"42-alternative-install-via-snap",children:"4.2 Alternative: Install via Snap"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install PyCharm Community Edition\nsudo snap install pycharm-community --classic\n\n# Install PyCharm Professional Edition\nsudo snap install pycharm-professional --classic\n"})}),"\n",(0,s.jsx)(n.h3,{id:"43-configure-pycharm-with-conda",children:"4.3 Configure PyCharm with Conda"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Open PyCharm"}),"\n",(0,s.jsx)(n.li,{children:"Go to File \u2192 Settings \u2192 Project \u2192 Python Interpreter"}),"\n",(0,s.jsx)(n.li,{children:"Click gear icon \u2192 Add \u2192 Conda Environment"}),"\n",(0,s.jsx)(n.li,{children:"Select existing environment or create new one"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"5-install-ros-robot-operating-system",children:"5. Install ROS (Robot Operating System)"}),"\n",(0,s.jsx)(n.h3,{id:"ros2-humble-ubuntu-2204",children:"ROS2 Humble (Ubuntu 22.04)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Add ROS2 repository\nsudo apt update && sudo apt install curl gnupg lsb-release\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null\n\n# Install ROS2 Humble\nsudo apt update\nsudo apt install -y ros-humble-desktop-full\n\n# Install development tools\nsudo apt install -y python3-colcon-common-extensions python3-rosdep\n\n# Initialize rosdep\nsudo rosdep init\nrosdep update\n\n# Source ROS2 setup\necho "source /opt/ros/humble/setup.bash" >> ~/.bashrc\nsource ~/.bashrc\n'})}),"\n",(0,s.jsx)(n.h3,{id:"ros1-noetic-ubuntu-2004",children:"ROS1 Noetic (Ubuntu 20.04)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Add ROS repository\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n\n# Add ROS keys\nsudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# Install ROS Noetic\nsudo apt update\nsudo apt install -y ros-noetic-desktop-full\n\n# Install rosdep\nsudo apt install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential\n\n# Initialize rosdep\nsudo rosdep init\nrosdep update\n\n# Source ROS setup\necho \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc\nsource ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.h2,{id:"6-install-nvidia-driver",children:"6. Install NVIDIA Driver"}),"\n",(0,s.jsx)(n.h3,{id:"61-check-available-drivers",children:"6.1 Check Available Drivers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check available NVIDIA drivers\nubuntu-drivers devices\n"})}),"\n",(0,s.jsx)(n.h3,{id:"62-install-recommended-driver",children:"6.2 Install Recommended Driver"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install the recommended driver (replace with your version)\nsudo apt install nvidia-driver-535\n\n# Alternative: Install automatically recommended driver\nsudo ubuntu-drivers autoinstall\n"})}),"\n",(0,s.jsx)(n.h3,{id:"63-handle-mok-machine-owner-key",children:"6.3 Handle MOK (Machine Owner Key)"}),"\n",(0,s.jsx)(n.p,{children:'If you see "Enroll MOK" during boot:'}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:'Select "Enroll MOK"'}),"\n",(0,s.jsx)(n.li,{children:'Select "Continue"'}),"\n",(0,s.jsx)(n.li,{children:"Enter the password you set during driver installation"}),"\n",(0,s.jsx)(n.li,{children:"Reboot"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"64-verify-installation",children:"6.4 Verify Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check NVIDIA driver installation\nnvidia-smi\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected output should show your GPU information and driver version."}),"\n",(0,s.jsx)(n.h2,{id:"7-install-cuda-toolkit",children:"7. Install CUDA Toolkit"}),"\n",(0,s.jsx)(n.h3,{id:"71-download-and-install-cuda",children:"7.1 Download and Install CUDA"}),"\n",(0,s.jsxs)(n.p,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://developer.nvidia.com/cuda-toolkit-archive",children:"NVIDIA CUDA Toolkit Archive"})," and download the appropriate version."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Example for CUDA 12.3 (adjust URL for your version)\nwget https://developer.download.nvidia.com/compute/cuda/12.3.0/local_installers/cuda_12.3.0_545.23.06_linux.run\n\n# Make executable\nchmod +x cuda_12.3.0_*.run\n\n# Install CUDA\nsudo sh cuda_12.3.0_*.run\n"})}),"\n",(0,s.jsx)(n.p,{children:"During installation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Deselect "Driver" (since we already installed it)'}),"\n",(0,s.jsx)(n.li,{children:'Select "CUDA Toolkit"'}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"72-configure-environment-variables",children:"7.2 Configure Environment Variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Edit bashrc\nnano ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add these lines (adjust version number as needed):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export PATH=/usr/local/cuda-12.3/bin${PATH:+:${PATH}}\nexport LD_LIBRARY_PATH=/usr/local/cuda-12.3/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Reload configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.h3,{id:"73-verify-cuda-installation",children:"7.3 Verify CUDA Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check CUDA version\nnvcc --version\n\n# Check CUDA samples (if installed)\ncd /usr/local/cuda/samples/1_Utilities/deviceQuery\nsudo make\n./deviceQuery\n"})}),"\n",(0,s.jsx)(n.h2,{id:"8-install-cudnn",children:"8. Install cuDNN"}),"\n",(0,s.jsx)(n.h3,{id:"81-download-cudnn",children:"8.1 Download cuDNN"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://developer.nvidia.com/rdp/cudnn-archive",children:"cuDNN Archive"})]}),"\n",(0,s.jsx)(n.li,{children:"Create NVIDIA Developer account if needed"}),"\n",(0,s.jsx)(n.li,{children:"Download cuDNN for your CUDA version"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"82-install-cudnn",children:"8.2 Install cuDNN"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Navigate to Downloads\ncd ~/Downloads\n\n# Extract cuDNN\ntar -xzf cudnn-*.tar.xz\n\n# Navigate to extracted directory\ncd cudnn-*\n\n# Copy files to CUDA installation\nsudo cp include/cudnn*.h /usr/local/cuda/include \nsudo cp -P lib/libcudnn* /usr/local/cuda/lib64 \nsudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*\n"})}),"\n",(0,s.jsx)(n.h3,{id:"83-verify-cudnn-installation",children:"8.3 Verify cuDNN Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check cuDNN version\ncat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2\n"})}),"\n",(0,s.jsx)(n.h2,{id:"9-install-pytorch",children:"9. Install PyTorch"}),"\n",(0,s.jsx)(n.h3,{id:"91-install-pytorch-with-cuda-support",children:"9.1 Install PyTorch with CUDA Support"}),"\n",(0,s.jsxs)(n.p,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://pytorch.org/get-started/previous-versions/",children:"PyTorch Previous Versions"})," for specific versions."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Activate your conda environment\nconda activate your_env_name\n\n# Install PyTorch with CUDA support (example for CUDA 12.1)\nconda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia\n\n# Alternative: pip installation\npip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\n"})}),"\n",(0,s.jsx)(n.h3,{id:"92-verify-pytorch-installation",children:"9.2 Verify PyTorch Installation"}),"\n",(0,s.jsx)(n.p,{children:"Create a test script:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import torch\n\nprint(f"PyTorch version: {torch.__version__}")\nprint(f"CUDA version: {torch.version.cuda}")\nprint(f"cuDNN version: {torch.backends.cudnn.version()}")\nprint(f"CUDA available: {torch.cuda.is_available()}")\nprint(f"CUDA device count: {torch.cuda.device_count()}")\n\nif torch.cuda.is_available():\n    print(f"CUDA device name: {torch.cuda.get_device_name(0)}")\n    print(f"Current CUDA device: {torch.cuda.current_device()}")\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run the script:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python test_pytorch.py\n"})}),"\n",(0,s.jsx)(n.h2,{id:"10-install-docker",children:"10. Install Docker"}),"\n",(0,s.jsx)(n.h3,{id:"101-install-docker-engine",children:"10.1 Install Docker Engine"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Remove old versions\nsudo apt-get remove docker docker-engine docker.io containerd runc\n\n# Add Docker\'s official GPG key\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add repository\necho \\\n  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# Install Docker Engine\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n'})}),"\n",(0,s.jsx)(n.h3,{id:"102-configure-docker-for-non-root-user",children:"10.2 Configure Docker for Non-root User"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Add user to docker group\nsudo groupadd docker\nsudo usermod -aG docker $USER\n\n# Apply changes\nnewgrp docker\n\n# Test installation\ndocker run hello-world\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Docker Desktop",type:"warning",children:(0,s.jsx)(n.p,{children:"Do not install Docker Desktop on Ubuntu. Docker Engine is sufficient and more lightweight."})}),"\n",(0,s.jsx)(n.h2,{id:"11-additional-development-tools",children:"11. Additional Development Tools"}),"\n",(0,s.jsx)(n.h3,{id:"111-install-vs-code",children:"11.1 Install VS Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Download and install VS Code\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg\nsudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/\necho "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | sudo tee /etc/apt/sources.list.d/vscode.list\n\nsudo apt update\nsudo apt install code\n'})}),"\n",(0,s.jsx)(n.h3,{id:"112-install-nodejs-and-npm",children:"11.2 Install Node.js and npm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install Node.js LTS\ncurl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Verify installation\nnode --version\nnpm --version\n"})}),"\n",(0,s.jsx)(n.h3,{id:"113-install-additional-programming-languages",children:"11.3 Install Additional Programming Languages"}),"\n",(0,s.jsx)(n.h4,{id:"java-development-kit",children:"Java Development Kit"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install OpenJDK\nsudo apt install default-jdk\n\n# Verify installation\njava --version\njavac --version\n"})}),"\n",(0,s.jsx)(n.h4,{id:"go-programming-language",children:"Go Programming Language"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install Go\nsudo apt install golang-go\n\n# Verify installation\ngo version\n"})}),"\n",(0,s.jsx)(n.h2,{id:"12-system-optimization",children:"12. System Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"121-install-system-monitoring-tools",children:"12.1 Install System Monitoring Tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install htop, neofetch, and other useful tools\nsudo apt install htop neofetch tree tmux screen\n"})}),"\n",(0,s.jsx)(n.h3,{id:"122-enable-firewall",children:"12.2 Enable Firewall"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable UFW firewall\nsudo ufw enable\n\n# Check status\nsudo ufw status\n"})}),"\n",(0,s.jsx)(n.h3,{id:"123-set-up-automatic-updates",children:"12.3 Set Up Automatic Updates"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install unattended-upgrades\nsudo apt install unattended-upgrades\n\n# Configure automatic updates\nsudo dpkg-reconfigure unattended-upgrades\n"})}),"\n",(0,s.jsx)(n.h2,{id:"13-backup-and-recovery",children:"13. Backup and Recovery"}),"\n",(0,s.jsx)(n.h3,{id:"131-create-system-backup",children:"13.1 Create System Backup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install timeshift for system snapshots\nsudo apt install timeshift\n\n# Create backup via GUI\nsudo timeshift-gtk\n"})}),"\n",(0,s.jsx)(n.h3,{id:"132-backup-configuration-files",children:"13.2 Backup Configuration Files"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Backup important configuration files\nmkdir ~/config-backup\ncp ~/.bashrc ~/config-backup/\ncp ~/.profile ~/config-backup/\n# Add other important configs as needed\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,s.jsx)(n.h4,{id:"nvidia-driver-issues",children:"NVIDIA Driver Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Purge and reinstall NVIDIA drivers\nsudo apt purge nvidia-* \nsudo ubuntu-drivers autoinstall\nsudo reboot\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cuda-path-issues",children:"CUDA Path Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check CUDA installation path\nls /usr/local/cuda*\n\n# Update paths in ~/.bashrc accordingly\n"})}),"\n",(0,s.jsx)(n.h4,{id:"python-environment-conflicts",children:"Python Environment Conflicts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Reset conda environment\nconda remove --name myenv --all\nconda create --name myenv python=3.9\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"System Maintenance",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Regularly update your system with ",(0,s.jsx)(n.code,{children:"sudo apt update && sudo apt upgrade"})]}),"\n",(0,s.jsx)(n.li,{children:"Keep your conda environments clean and organized"}),"\n",(0,s.jsx)(n.li,{children:"Use virtual environments for different projects"}),"\n",(0,s.jsxs)(n.li,{children:["Monitor system resources with ",(0,s.jsx)(n.code,{children:"htop"})," and ",(0,s.jsx)(n.code,{children:"nvidia-smi"})]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://help.ubuntu.com/",children:"Ubuntu Official Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.anaconda.com/",children:"Anaconda Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.nvidia.com/cuda/",children:"NVIDIA CUDA Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pytorch.org/docs/",children:"PyTorch Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker Documentation"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);